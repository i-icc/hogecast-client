name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main
      - develop

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: |
          yarn install && yarn build
          echo "Project ID: $NEXT_PUBLIC_FIREBASE_PROJECT_ID"
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}

      # Firebase CLI のインストール
      - run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting (prod)
        if: github.ref == 'refs/heads/main'
        run: |
          firebase experiments:enable webframeworks
          firebase deploy --project $NEXT_PUBLIC_FIREBASE_PROJECT_ID
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}

      # ステージング環境 (stg) にデプロイ
      - name: Deploy to Firebase Hosting (stg)
        if: github.ref == 'refs/heads/develop'
        run: |
          firebase experiments:enable webframeworks
          firebase hosting:channel:deploy stg --project $NEXT_PUBLIC_FIREBASE_PROJECT_ID
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
